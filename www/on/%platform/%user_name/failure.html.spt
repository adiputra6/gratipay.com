from aspen import Response

[---]

platform = getattr(website.platforms, path['platform'], None)
if platform is None:
    raise Response(404)

user_name = path['user_name']
if not user_name:
    raise Response(400, '%user_name is empty')
website.db.one( "SELECT * FROM ELSEWHERE WHERE platform=%s AND user_name=%s"
              , (platform.name, user_name)
              , default=Response(404)
               )

try:
    action = qs['action']
except KeyError:
    raise Response(400)

team = qs.get('team', '').lower() == 'true'

title = _("Failure")

[---]
{% extends "templates/base.html" %}
{% block content %}

    {% if team %}

    <h2>Are you really an administrator of the {{ user_name|e }} team?</h2>

    <p>Your attempt to {{ action|e }} this account failed because you're
    logged into {{ platform.display_name }} as someone who isn't an
    administrator of the {{ user_name|e }} team. Please sign out
    and <a href="./">try again</a>.</p>

    {% else %}

    <h2>Are you really {{ user_name|e }}?</h2>

    <p>Your attempt to {{ action|e }} this account failed because you're
    logged into {{ platform.display_name }} as someone else. Please sign out
    and <a href="./">try again</a>.</p>

    {% endif %}

{% endblock %}
